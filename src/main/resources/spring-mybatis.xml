<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/jdbc 
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        <context:component-scan base-package="com.listore.dao"/>
        <context:component-scan base-package="com.listore.pojo"/>
        <context:component-scan base-package="com.listore.service"/>
        <context:component-scan base-package="com.listore.service.impl"/>
        <context:component-scan base-package="com.listore.controller"/>
        <context:component-scan base-package="com.listore.controller.backStage"/>
        <context:component-scan base-package="com.listore.vo"/>
        <mvc:annotation-driven/>
        <context:annotation-config/>
        <context:property-placeholder location="classpath:db.properties"/>
        <!-- dataSources -->
        <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
                <property name="driverClassName" value="${jdbc.driverClassName}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
                <!-- 连接池启动时的初始值 -->
                <property name="initialSize" value="${db.initialSize}"/>
               
                <!-- 最大空闲值，当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放 -->
                <property name="maxIdle" value="${db.maxIdle}"/>
                <!-- 最小空闲值，当空闲的连接少于阙值的时候，连接池就会预申请一些连接，以免洪峰来时来不及申请 -->
                <property name="minIdle" value="${db.minIdle}"/>
                <!-- 最大连接等待时间，如果超过此时间将接到连接异常，设为-1表示没有该限制 -->
                <property name="maxWaitMillis" value="${db.maxWait}"/>
                <!-- 给出一条简单的sql语句进行验证 -->
                <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
                <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>
        </bean>
        <!-- 配合sqlSessionFactory -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        		<property name="dataSource" ref="dataSource"/>
        		<property name="mapperLocations" value="classpath:mappers/*.xml"/>
        		<!-- 分页插件 -->
        		<property name="plugins">
        				       <bean class="com.github.pagehelper.PageHelper">
        				             <property name="properties">
        				                    <value>
        				                         dialect=mysql
        				                    </value>
        				             </property>
        				       </bean>
        		</property>
        </bean>
        <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        		<property name="basePackage" value="com.listore.dao"/>
        		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        </bean>
        <tx:annotation-driven transaction-manager="txManager"/>
        <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        		<property name="dataSource" ref="dataSource"/>
        		<property name="rollbackOnCommitFailure" value="true"/>
        </bean>
</beans>