<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.listore.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.listore.pojo.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="order_id" jdbcType="INTEGER" property="id" />
    <result column="order_order_no" jdbcType="BIGINT" property="orderNo" />
    <result column="order_user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_shipping_id" jdbcType="INTEGER" property="shippingId" />
    <result column="order_payment" jdbcType="DECIMAL" property="payment" />
    <result column="order_payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="order_postage" jdbcType="INTEGER" property="postage" />
    <result column="order_status" jdbcType="INTEGER" property="status" />
    <result column="order_payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="order_send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="order_end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="order_close_time" jdbcType="TIMESTAMP" property="closeTime" />
    <result column="order_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="order_update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    listore_order.id as order_id, listore_order.order_no as order_order_no, listore_order.user_id as order_user_id,
    listore_order.shipping_id as order_shipping_id, listore_order.payment as order_payment, listore_order.payment_type as order_payment_type,
    listore_order.postage as order_postage, listore_order.status as order_status, listore_order.payment_time as order_payment_time,
    listore_order.send_time as order_send_time, listore_order.end_time as order_end_time, listore_order.close_time as order_close_time,
    listore_order.create_time as order_create_time, listore_order.update_time as order_update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from listore_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from listore_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.listore.pojo.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into listore_order (id, order_no, user_id, 
      shipping_id, payment, payment_type, 
      postage, status, payment_time, 
      send_time, end_time, close_time, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, 
      #{shippingId,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=INTEGER}, 
      #{postage,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, 
      now(),now())
  </insert>
  <insert id="insertSelective" parameterType="com.listore.pojo.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into listore_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="shippingId != null">
        shipping_id,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="postage != null">
        postage,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="shippingId != null">
        #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        #{postage,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.listore.pojo.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update listore_order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="shippingId != null">
        shipping_id = #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        postage = #{postage,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.listore.pojo.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update listore_order
    set order_no = #{orderNo,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER},
      shipping_id = #{shippingId,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=INTEGER},
      postage = #{postage,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserIdAndOrderNo" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from listore_order
    where user_id=#{userId}
    and order_no = #{orderNo}
  </select>
  <select id="selectByOrderNo" parameterType="long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from listore_order
    where order_no=#{orderNo}
  </select>
  <select id="selectByUserId" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from listore_order
    where user_id =#{userId}
    order by create_time desc
  </select>

</mapper>