package com.listore.dao;

import com.listore.pojo.User;
import com.listore.pojo.UserExample;
import org.apache.ibatis.annotations.Param;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table listore_user
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table listore_user
     *
     * @mbg.generated
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table listore_user
     *
     * @mbg.generated
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table listore_user
     *
     * @mbg.generated
     */
    User selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table listore_user
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") User record, @Param("example") UserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table listore_user
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") User record, @Param("example") UserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table listore_user
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table listore_user
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(User record);
    //检查用户名
	int checkUsername(String username);
	//返回一个登陆用户的对象
	User selectLogin(@Param("username")String username,@Param("password")String password);
    //检查邮箱
	int checkEmail(String email);

	String selectQuestionByUser(String username);

	int  checkAnswer(@Param("username")String username,@Param("question")String question, @Param("answer")String answer);

	int updatePasswordByUsername(@Param("username")String username,@Param("passwordNew")String passwordNew);

	int checkPassword(@Param("password")String password, @Param("userId")Integer userId);

	int checkEmailByUserId(@Param("email")String email, @Param("userId")Integer userId);
}